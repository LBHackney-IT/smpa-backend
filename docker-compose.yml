version: '3.3'

volumes:
  media: {}

services:
  # Postgres
  db:
    image: mongkok/postgres:10
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_DB_EXTENSION=postgis,hstore,uuid-ossp
    volumes:
      - ./data/:/var/lib/postgresql/data
    # command: psql -v -U ${POSTGRES_USER} '\c ${POSTGRES_DB}; CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology; CREATE EXTENSION "uuid-ossp"'

  rethink:
    image: rethinkdb:2.3
    restart: always
    ports:
      - "8080:8080"
      - "28015:28015"
      - "29015:29015"
    command: ["rethinkdb", "--initial-password", "${RDB_PASSWORD}", "--bind", "all"]

  # Redis
  redis:
    restart: always
    image: sameersbn/redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/var/lib/redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  # # Prometheus
  # prometheus:
  #   restart: always
  #   image: quay.io/prometheus/prometheus:latest
  #   ports:
  #     - "9090:9090"

  # Application
  web:
    image: smpa:latest
    environment:
      - SERVER_ENV=development
      - ENVKEY=${ENVKEY}
      - INDOCKER=1
    restart: always
    build:
      context: ./web
      args:
        - SERVER_ENV=development
        - ENVKEY=${ENVKEY}
    volumes:
      - ./web/reqs/:/usr/srv/reqs
      - ./web/smpa/:/usr/srv/app
    ports:
      - "8000:8000"
      - "5000:5000"
    links:
      - db
      - redis
    depends_on:
      - db
      - redis

    # USE THIS ON FIRST RUN IF YOU'VE NEVER RUN THE CONTAINER BEFORE MAYBE
    # command: zsh -c "eval $$(envkey-source) && python /usr/srv/app/manage.py makemigrations users && python /usr/srv/app/manage.py makemigrations core && python /usr/srv/app/manage.py migrate core && python /usr/srv/app/manage.py makemigrations && python /usr/srv/app/manage.py migrate"

    # Run just the dev server
    # command: zsh -c "eval $$(envkey-source) && python /usr/srv/app/manage.py runserver 0.0.0.0:5000"

    # Automatically run migrations when the dev server is started
    # command: zsh -c "eval $$(envkey-source) && python /usr/srv/app/manage.py makemigrations && python /usr/srv/app/manage.py migrate && python /usr/srv/app/manage.py runserver 0.0.0.0:5000"

    # Run gunicorn instead of the devserver
    # command: zsh -c "eval $$(envkey-source) && /usr/local/bin/gunicorn docker_django.wsgi:application -w 2 -b :5000

    # Run indefinitely
    command: sleep 1000000
